name: scancodeio
services:
  db:
    image: docker.io/library/postgres:13
    env_file:
      - docker.env
    volumes:
      - db_data:/var/lib/postgresql/data/
    shm_size: "1gb"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: docker.io/library/redis:latest
    # Enable redis data persistence using the "Append Only File" with the
    # default policy of fsync every second. See https://redis.io/topics/persistence
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: always

  # This service is responsible for ensuring the correct ownership of files
  # in the shared volumes used by the application (static and workspace).
  # It ensures that all files inside the `/var/scancodeio/` directory are owned
  # by the user and group with the UID and GID defined in the environment variables
  # APP_UID and APP_GID, which default to 1000 if not set.
  #
  # The service runs only once (due to "restart: no") and performs a `chown` operation
  # to change the ownership of the static and workspace directories, ensuring proper
  # file access rights for the running application containers.
  #
  # Volumes mounted:
  # - static: Ensures the ownership of static files in the /var/scancodeio/static directory
  # - media: Ensures the ownership of media files in the /var/scancodeio/workspace directory
  #
  # Notes: This service can be removed in future ScanCode.io release.
  chown:
    image: docker.io/library/alpine:latest
    restart: "no"
    command: sh -c "
      if [ ! -f /var/scancodeio/workspace/.chown_done ]; then
        chown -R ${APP_UID:-1000}:${APP_GID:-1000} /var/scancodeio/ &&
        touch /var/scancodeio/workspace/.chown_done;
        echo 'Chown applied!';
      else
        echo 'Chown already applied, skipping...';
      fi"
    env_file:
      - docker.env
    volumes:
      - static:/var/scancodeio/static/
      - workspace:/var/scancodeio/workspace/

  web:
    build: .
    command: sh -c "
        ./manage.py migrate &&
        ./manage.py collectstatic --no-input --verbosity 0 --clear &&
        gunicorn scancodeio.wsgi:application --bind :8000 --timeout 600 \
          --workers 8 ${GUNICORN_RELOAD_FLAG:-}"
    env_file:
      - docker.env
    expose:
      - 8000
    volumes:
      - .env:/opt/scancodeio/.env
      - /etc/scancodeio/:/etc/scancodeio/
      - workspace:/var/scancodeio/workspace/
      - static:/var/scancodeio/static/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      chown:
        condition: service_completed_successfully

  worker:
    build: .
    # Ensure that potential db migrations run first by waiting until "web" is up
    command: wait-for-it --strict --timeout=600 web:8000 -- sh -c "
        ./manage.py rqworker --worker-class scancodeio.worker.ScanCodeIOWorker
                             --queue-class scancodeio.worker.ScanCodeIOQueue
                             --verbosity 1"
    env_file:
      - docker.env
    volumes:
      - .env:/opt/scancodeio/.env
      - /etc/scancodeio/:/etc/scancodeio/
      - workspace:/var/scancodeio/workspace/
    depends_on:
      - redis
      - db
      - web
      - chown

  nginx:
    image: docker.io/library/nginx:alpine
    ports:
      - "${NGINX_PUBLISHED_HTTP_PORT:-80}:80"
      - "${NGINX_PUBLISHED_HTTPS_PORT:-443}:443"
    volumes:
      - ./etc/nginx/conf.d/:/etc/nginx/conf.d/
      - /var/www/html:/var/www/html
      - static:/var/scancodeio/static/
    depends_on:
      - web
    restart: always

  clamav:
    image: docker.io/clamav/clamav:latest
    volumes:
      - clamav_data:/var/lib/clamav
      - workspace:/var/scancodeio/workspace/
    restart: always

volumes:
  db_data:
  redis_data:
  clamav_data:
  static:
  workspace:
