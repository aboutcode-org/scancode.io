# Generated by Django 4.0.6 on 2022-08-04 19:24

from django.db import migrations, models
import django.db.models.deletion
import scanpipe.models


class Migration(migrations.Migration):

    dependencies = [
        ('scanpipe', '0020_codebaseresource_package_data_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='discoveredpackage',
            name='dependencies',
        ),
        migrations.CreateModel(
            name='DiscoveredDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purl', models.CharField(help_text='The Package URL of this dependency.', max_length=1024)),
                ('extracted_requirement', models.CharField(blank=True, help_text='The version requirements of this dependency.', max_length=64)),
                ('scope', models.CharField(blank=True, help_text='The scope of this dependency, how it is used in a project.', max_length=64)),
                ('is_runtime', models.BooleanField(default=False)),
                ('is_optional', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('dependency_uid', models.CharField(help_text='The unique identifier of this dependency.', max_length=1024)),
                ('for_package_uid', models.CharField(blank=True, help_text='The unique identifier of the package this dependency is for.', max_length=1024)),
                ('datafile_path', models.CharField(blank=True, help_text='The relative path to the datafile where this dependency was detected from.', max_length=1024)),
                ('datasource_id', models.CharField(blank=True, help_text='The identifier for the datafile handler used to obtain this dependency.', max_length=64)),
                ('project', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='scanpipe.project')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, scanpipe.models.SaveProjectErrorMixin),
        ),
        migrations.AddField(
            model_name='discoveredpackage',
            name='dependencies',
            field=models.ManyToManyField(related_name='discovered_packages', to='scanpipe.discovereddependency'),
        ),
    ]
