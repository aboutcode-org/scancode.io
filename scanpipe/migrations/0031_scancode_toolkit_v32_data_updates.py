# Generated by Django 4.2 on 2023-05-05 10:11

from django.db import migrations
from django.db.models import Q


def compute_package_declared_license_expression_spdx(apps, schema_editor):
    """
    Compute DiscoveredPackage `declared_license_expression_spdx`, when missing,
    from `declared_license_expression`, when available.
    """
    from licensedcode.cache import build_spdx_license_expression

    DiscoveredPackage = apps.get_model('scanpipe', 'DiscoveredPackage')
    packages = DiscoveredPackage.objects.filter(
        ~Q(declared_license_expression="") & Q(declared_license_expression_spdx="")
    )

    for package in packages:
        if spdx := build_spdx_license_expression(package.declared_license_expression):
            package.declared_license_expression_spdx = spdx
            package.save()


class Migration(migrations.Migration):
    dependencies = [
        ("scanpipe", "0030_scancode_toolkit_v32_model_updates"),
    ]

    operations = [
        migrations.RunPython(
            compute_package_declared_license_expression_spdx,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
