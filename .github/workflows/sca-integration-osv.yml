name: Generate SBOM with OSV-Scanner and load into ScanCode.io

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  IMAGE_REFERENCE: "python:3.13.0-slim"

jobs:
  generate-and-load-sbom:
    runs-on: ubuntu-24.04
    steps:
      - name: Install OSV-Scanner
        run: |
          curl -sLO https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64
          chmod +x osv-scanner_linux_amd64
          sudo mv osv-scanner_linux_amd64 /usr/local/bin/osv-scanner

      - name: Run OSV Scanner
        # OSV-Scanner exits with code 1 when vulnerabilities are found.
        continue-on-error: true
        run: |
          osv-scanner scan image ${{ env.IMAGE_REFERENCE }} \
            --all-packages \
            --format spdx-2-3 \
            --output osv-sbom.spdx.json

      - name: Upload SBOM as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: osv-scanner-sbom-report
          path: osv-sbom.spdx.json
          retention-days: 20

      - name: Import SBOM into ScanCode.io
        uses: aboutcode-org/scancode-action@main
        with:
          pipelines: "load_sbom"
          inputs-path: "osv-sbom.spdx.json"
          scancodeio-repo-branch: "main"

      - name: Verify SBOM Analysis Results in ScanCode.io
        shell: bash
        run: |
          scanpipe shell --command "from scanpipe.models import DiscoveredPackage, DiscoveredDependency; package_manager = DiscoveredPackage.objects; print(package_manager.count()); print(package_manager.vulnerable().count()); print(DiscoveredDependency.objects.count())"
