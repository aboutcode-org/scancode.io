name: Generate SBOM with Vuls and load into ScanCode.io

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  IMAGE_REFERENCE: "python:3.13.0-slim"

jobs:
  generate-and-load-sbom:
    runs-on: ubuntu-24.04
    steps:
      - name: Start Python container
        run: |
          docker run -d --name sbom_target ${{ env.IMAGE_REFERENCE }} tail -f /dev/null

      - name: Prepare target container for OS detection
        run: |
          docker exec sbom_target apt-get update
          docker exec sbom_target apt-get install -y lsb-release

      - name: Pull Vuls and dictionary images
        run: |
          docker pull vuls/vuls
#          docker pull vuls/go-cve-dictionary
#          docker pull vuls/goval-dictionary

      - name: Prepare Vuls config.toml
        run: |
          cat > config.toml <<'EOF'
          [servers]
          [servers.local-docker]
          containerType = "docker"
          containers = ["sbom_target"]
          EOF

      - name: Fetch CVE Databases
        run: |
          mkdir -p ./vuls-data
#          docker run --rm -v $PWD/vuls-data:/vuls vuls/go-cve-dictionary fetch nvd
#          docker run --rm -v $PWD/vuls-data:/vuls vuls/go-cve-dictionary fetch jvn

#      - name: Fetch OVAL Definitions
#        run: |
#          mkdir -p ./vuls-data
#          docker run --rm -v $PWD/vuls-data:/vuls vuls/goval-dictionary fetch debian

      - name: Test Vuls Config
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD:/workdir \
            -w /workdir \
            vuls/vuls configtest -config=/workdir/config.toml

      - name: Run Vuls Scan
        run: |
          mkdir -p ./results
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD:/workdir \
            -w /workdir \
            vuls/vuls scan -config=/workdir/config.toml -results-dir=/workdir/results

      - name: Upload Vuls report as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vuls-scan-report
          path: results
          retention-days: 20
